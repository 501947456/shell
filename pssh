yum安装 
[root@bastion-IDC ~]# yum install -y pssh
[root@bastion-IDC ~]# pssh --help
-h      执行命令的远程主机列表文件 
-H      user@ip:port 文件内容格式[user@]host[:port] 
-l        远程机器的用户名 
-p       一次最大允许多少连接 
-o       输出内容重定向到一个文件 
-e       执行错误重定向到一个文件 
-t        设置命令执行的超时时间 
-A      提示输入密码并且把密码传递给ssh（注意这个参数添加后只是提示作用，随便输入或者不输入直接回车都可以） 
-O      设置ssh参数的具体配置，参照ssh_config配置文件 
-x      传递多个SSH 命令，多个命令用空格分开，用引号括起来 
-X     同-x 但是一次只能传递一个命令 
-i      显示标准输出和标准错误在每台host执行完毕后 
-I      读取每个输入命令，并传递给ssh进程 允许命令脚本传送到标准输入

3）pssh实例说明
[root@bastion-IDC ~]# cat hosts.txt    //列表文件内的信息格式是“ip:端口”，如果本机和远程机器使用的ssh端口一致，则可以省去端口，直接用ip就行。不过建议还是将端口都带上为好。
192.168.1.101:22
192.168.1.109:22
192.168.1.118:25791
192.168.1.105:25791
如上四台机器放在一个列表文件hosts.txt内，本机已经和这四台机器做了ssh无密码登陆的信任关系
注意：列表文件内的机器必须提前和本机做好ssh信任关系，如果没有做的话，那么pssh批量执行时，轮到这台没有做信任关系的机器时就不会执行。

a）批量执行命令
[root@bastion-IDC ~]# pssh -h hosts.txt -l root -i 'uptime'
[root@bastion-IDC ~]# pssh -h hosts.txt -l root -i -t 10 -o /root/pssh.log 'uptime && date'

b）批量上传文件或目录（pscp.pssh命令）
批量上传本地文件/mnt/test.file到远程服务器上的/tmp目录：
[root@bastion-IDC ~]# pscp.pssh -l root -h hosts.txt /mnt/test.file /tmp/
批量上传本地文件/mnt/test.file、/mnt/aa.file、/mnt/bb.file到远程服务器上的/tmp目录：
[root@bastion-IDC ~]# pscp.pssh -l root -h hosts.txt /mnt/test.file /mnt/aa.file /mnt/bb.file /tmp/
 或者
 [root@bastion-IDC ~]# pscp.pssh -l root -h hosts.txt /mnt/{test.file,aa.file,bb.file} /tmp/
 
 批量上传本地目录/mnt/zhong到远程服务器上的/tmp目录（上传目录需要添加-r参数）：
  pscp.pssh -l root -h hosts.txt -r /mnt/zhong /tmp/
  
  pscp.pssh -l root -h hosts.txt -r /mnt/zhong /mnt/aa /mnt/vv /tmp/
  pscp.pssh -l root -h hosts.txt -r /mnt/{zhong,aa,vv} /tmp/
  
  
  c）批量下载文件或目录（pslurp命令）
  批量下载服务器上的某文件到本地，不用担心重名问题，因为pssh已经建立了以文件列表内的ip为名称的目录来存放下载的文件：
  上面的批量下载操作，只能下载到本地的当前目录下，不能在命令中跟指定的路径：
   pslurp -l root -h hosts.txt /etc/hosts .
   
   上面是批量下载文件，要是批量下载目录，只需要添加一个-r参数即可！
[root@bastion-IDC mnt]# pslurp -l root -h /root/hosts.txt -r /home/ ./
   
   d）批量同步（prsync命令）
同步本机/mnt/test目录下的文件或目录到远程机器的/mnt/test路径下
[root@bastion-IDC ~]# prsync -l root -h hosts.txt -r /mnt/test/ /mnt/test/
  
  同步本机/mnt/test目录下的文件或目录到远程机器的/mnt路径下
[root@bastion-IDC ~]# prsync -l root -h hosts.txt -r /mnt/test/ /mnt/
注意：
上面批量同步目录操作是将本机对应目录数据同步到远程机器上，远程机器上对于目录下多余的文件也会保留（不会删除多余文件）

同理，批量同步文件操作，去掉-r参数，
注意：同步文件的时候，其实就是完全覆盖，远程机器对应文件内的文件会被全部替换！


e）批量kill远程机器上的进程（pnuke命令）
比如批量kill掉远程机器上的nginx进程
[root@bastion-IDC ~]# pnuke -h hosts.txt -l root nginx
